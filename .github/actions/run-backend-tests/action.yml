name: "Run Backend Tests with PostgreSQL in Docker"
description: "Builds a Docker image and runs Gradle tests within the container, then uploads test coverage in a Java project"
inputs:
  working-directory:
    description: "The working directory where your backend project is located"
    required: true
    default: "./backend"
  codecov-token:
    description: "Codecov token for uploading coverage"
    required: true
  docker-on:
    description: "Docker on setting"
    required: true
  port:
    description: "Port number"
    required: true
  db-host:
    description: "Database host"
    required: true
  db-username:
    description: "Database username"
    required: true
  db-password:
    description: "Database password"
    required: true
  ddl-auto:
    description: "DDL Auto setting"
    required: true
  auth0-issuer-base-url:
    description: "Auth0 issuer base URL"
    required: true
  auth0-audience:
    description: "Auth0 audience"
    required: true
  auth0-client-id:
    description: "Auth0 client ID"
    required: true
  auth0-client-secret:
    description: "Auth0 client secret"
    required: true
  auth0-mgmt-audience:
    description: "Auth0 management audience"
    required: true
  app-url:
    description: "Application URL"
    required: true
  security-log-level:
    description: "Security log level"
    required: true
  swagger-ui-on:
    description: "Swagger UI setting"
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build Docker Image
      shell: bash
      run: docker build -t backend-tests -f ./docker/test/Dockerfile.backend .

    - name: Save Docker Image as Artifact
      shell: bash
      run: |
        docker save backend-tests | gzip > backend-tests.tar.gz

    - name: Upload Docker Image Artifact
      uses: actions/upload-artifact@v2
      with:
        name: backend-tests-image
        path: backend-tests.tar.gz

    - name: Start Backend Container
      shell: bash
      run: |
        docker run -d \
          -e DOCKER_ON='${{ inputs.docker-on }}' \
          -e PORT='${{ inputs.port }}' \
          -e DB_HOST='${{ inputs.db-host }}' \
          -e DB_USERNAME='${{ inputs.db-username }}' \
          -e DB_PASSWORD='${{ inputs.db-password }}' \
          -e DDL_AUTO='${{ inputs.ddl-auto }}' \
          -e AUTH0_ISSUER_BASE_URL='${{ inputs.auth0-issuer-base-url }}' \
          -e AUTH0_AUDIENCE='${{ inputs.auth0-audience }}' \
          -e AUTH0_CLIENT_ID='${{ inputs.auth0-client-id }}' \
          -e AUTH0_CLIENT_SECRET='${{ inputs.auth0-client-secret }}' \
          -e AUTH0_MGMT_AUDIENCE='${{ inputs.auth0-mgmt-audience }}' \
          -e APP_URL='${{ inputs.app-url }}' \
          -e SECURITY_LOG_LEVEL='${{ inputs.security-log-level }}' \
          -e SWAGGER_UI_ON='${{ inputs.swagger-ui-on }}' \
          --add-host host.docker.internal:host-gateway \
          -v $(pwd)/backend/build:/app/build \
          --name test-container \
          backend-tests

    - name: Run Gradle Tests in Docker Container
      shell: bash
      run: docker exec test-container gradle test -info

    - name: Upload Backend Test Results
      uses: actions/upload-artifact@v2
      with:
        name: backend-test-results
        path: ./backend/build

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ inputs.codecov-token }}
        directory: ./backend/build/reports
        flags: backend
        fail_ci_if_error: true
        verbose: true
