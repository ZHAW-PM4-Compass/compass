name: "Run Frontend Tests"
description: "Installs dependencies and runs tests in a Node.js project"
inputs:
  working-directory:
    description: "The working directory where your frontend project is located"
    required: true
    default: "./frontend"
  codecov-token:
    description: "Codecov token for uploading coverage"
    required: true
  auth0-secret:
    description: "Auth0 secret"
    required: true
  auth0-base-url:
    description: "Auth0 base URL"
    required: true
  auth0-issuer-base-url:
    description: "Auth0 issuer base URL"
    required: true
  auth0-client-id:
    description: "Auth0 client ID"
    required: true
  auth0-client-secret:
    description: "Auth0 client secret"
    required: true
  auth0-audience:
    description: "Auth0 audience"
    required: true
  node-env:
    description: "Node environment"
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: "20"

    - name: Install Dependencies
      run: |
        cd ${{ inputs.working-directory }}
        npm install
      shell: bash

    - name: Install Playwright Browsers
      run: |
        cd ${{ inputs.working-directory }}
        npx playwright install --with-deps
      shell: bash

    - name: Build Project
      run: |
        cd ${{ inputs.working-directory }}
        npm run build
      shell: bash

    - name: Run Playwright Tests
      run: |
        cd ${{ inputs.working-directory }}
        NODE_ENV=${{ inputs.node-env }} AUTH0_SECRET='${{ inputs.auth0-secret }}' AUTH0_BASE_URL='${{ inputs.auth0-base-url }}' AUTH0_ISSUER_BASE_URL='${{ inputs.auth0-issuer-base-url }}' AUTH0_CLIENT_ID='${{ inputs.auth0-client-id }}' AUTH0_CLIENT_SECRET='${{ inputs.auth0-client-secret }}' AUTH0_AUDIENCE='${{ inputs.auth0-audience }}' npm run test:coverage
      shell: bash

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ inputs.codecov-token }}
        directory: ${{ inputs.working-directory }}/test-results
        flags: frontend
        fail_ci_if_error: true
        verbose: true

    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      with:
        name: frontend-test-results
        path: ${{ inputs.working-directory }}/test-results
