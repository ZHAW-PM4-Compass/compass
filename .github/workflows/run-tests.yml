name: Front and Backend Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch: # enables manual trigger

jobs:
  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Run Frontend Tests and Upload Coverage
        uses: ./.github/actions/run-frontend-tests
        with:
          working-directory: "./frontend"
          codecov-token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload Frontend Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: frontend-test-results
          path: ./frontend/build/reports

  backend-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_HOST: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: compass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"
      - name: Run Backend Tests and Upload Coverage
        uses: ./.github/actions/run-backend-tests
        with:
          working-directory: "./backend"
          codecov-token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload Backend Test Results
        uses: actions/upload-artifact@v2
        with:
          name: backend-test-results
          path: ./backend/build

  sonarqube-analysis:
    needs: [backend-tests, frontend-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK for SonarQube
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: "temurin"

      - name: Download Frontend Test Results
        uses: actions/download-artifact@v2
        with:
          name: frontend-test-results
          path: ./frontend/build/reports

      - name: Download Backend Test Results
        uses: actions/download-artifact@v2
        with:
          name: backend-test-results
          path: ./backend/build

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
