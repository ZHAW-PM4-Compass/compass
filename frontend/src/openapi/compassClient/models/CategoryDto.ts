/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ParticipantDto } from './ParticipantDto';
import {
    ParticipantDtoFromJSON,
    ParticipantDtoFromJSONTyped,
    ParticipantDtoToJSON,
} from './ParticipantDto';
import type { RatingDto } from './RatingDto';
import {
    RatingDtoFromJSON,
    RatingDtoFromJSONTyped,
    RatingDtoToJSON,
} from './RatingDto';

/**
 * 
 * @export
 * @interface CategoryDto
 */
export interface CategoryDto {
    /**
     * 
     * @type {string}
     * @memberof CategoryDto
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof CategoryDto
     */
    minimumValue?: number;
    /**
     * 
     * @type {number}
     * @memberof CategoryDto
     */
    maximumValue?: number;
    /**
     * 
     * @type {number}
     * @memberof CategoryDto
     */
    id?: number;
    /**
     * 
     * @type {Array<ParticipantDto>}
     * @memberof CategoryDto
     */
    categoryOwners?: Array<ParticipantDto>;
    /**
     * 
     * @type {Array<RatingDto>}
     * @memberof CategoryDto
     */
    readonly moodRatings?: Array<RatingDto>;
}

/**
 * Check if a given object implements the CategoryDto interface.
 */
export function instanceOfCategoryDto(value: object): boolean {
    return true;
}

export function CategoryDtoFromJSON(json: any): CategoryDto {
    return CategoryDtoFromJSONTyped(json, false);
}

export function CategoryDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CategoryDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'minimumValue': json['minimumValue'] == null ? undefined : json['minimumValue'],
        'maximumValue': json['maximumValue'] == null ? undefined : json['maximumValue'],
        'id': json['id'] == null ? undefined : json['id'],
        'categoryOwners': json['categoryOwners'] == null ? undefined : ((json['categoryOwners'] as Array<any>).map(ParticipantDtoFromJSON)),
        'moodRatings': json['moodRatings'] == null ? undefined : ((json['moodRatings'] as Array<any>).map(RatingDtoFromJSON)),
    };
}

export function CategoryDtoToJSON(value?: CategoryDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'minimumValue': value['minimumValue'],
        'maximumValue': value['maximumValue'],
        'id': value['id'],
        'categoryOwners': value['categoryOwners'] == null ? undefined : ((value['categoryOwners'] as Array<any>).map(ParticipantDtoToJSON)),
    };
}

